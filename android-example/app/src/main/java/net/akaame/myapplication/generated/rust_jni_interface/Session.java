// Automatically generated by rust_swig
package net.akaame.myapplication.generated.rust_jni_interface;
import androidx.annotation.NonNull;

public final class Session {

    public Session(@NonNull Config cfg) {
        long a0 = cfg.mNativeObj;
        cfg.mNativeObj = 0;

        mNativeObj = init(a0);
        JNIReachabilityFence.reachabilityFence1(cfg);
    }
    private static native long init(long cfg);

    public final int add_and1(int val) {
        int ret = do_add_and1(mNativeObj, val);

        return ret;
    }
    private static native int do_add_and1(long self, int val);

    public static native @NonNull String greet(@NonNull String to);

    public final int calcF(int a0, int a1) {
        int ret = do_calcF(mNativeObj, a0, a1);

        return ret;
    }
    private static native int do_calcF(long self, int a0, int a1);

    public synchronized void delete() {
        if (mNativeObj != 0) {
            do_delete(mNativeObj);
            mNativeObj = 0;
       }
    }
    @Override
    protected void finalize() throws Throwable {
        try {
            delete();
        }
        finally {
             super.finalize();
        }
    }
    private static native void do_delete(long me);
    /*package*/ Session(InternalPointerMarker marker, long ptr) {
        assert marker == InternalPointerMarker.RAW_PTR;
        this.mNativeObj = ptr;
    }
    /*package*/ long mNativeObj;
}